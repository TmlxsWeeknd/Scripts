-- SERVICES
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

-- SETTINGS
local gameId = game.PlaceId
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local hopCooldown = 0.5

-- UI SETUP
local screenGui = Instance.new("ScreenGui", gui)
screenGui.Name = "LuckHopUI"
screenGui.ResetOnSpawn = false

local function createButton(name, posY, width, height)
    local btn = Instance.new("TextButton")
    btn.Name = name
    btn.Size = UDim2.new(0, width, 0, height)
    btn.Position = UDim2.new(0, 10, 0, posY)
    btn.BackgroundColor3 = Color3.new(0,0,0)
    btn.BackgroundTransparency = 0.5
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.SciFi
    btn.TextSize = 20
    btn.Text = name
    btn.BorderSizePixel = 0
    local uic = Instance.new("UICorner", btn)
    uic.CornerRadius = UDim.new(0,12)
    btn.Parent = screenGui
    return btn
end

local toggleButton = createButton("Luck Hop: ON", 50, 250, 40)
local statusButton = createButton("Status: Searching for Luck...", 100, 280, 30)

-- RAINBOW TEXT EFFECT
spawn(function()
    while true do
        local t = tick()
        local rainbow = Color3.fromHSV((t % 5) / 5, 1, 1)
        toggleButton.TextColor3 = rainbow
        statusButton.TextColor3 = rainbow
        RunService.RenderStepped:Wait()
    end
end)

-- ANTI-AFK
player.Idled:Connect(function()
    local vu = game:GetService("VirtualUser")
    vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
end)

local hopping = true
local luckFound = false

toggleButton.MouseButton1Click:Connect(function()
    hopping = not hopping
    toggleButton.Text = "Luck Hop: " .. (hopping and "ON" or "OFF")
end)

statusButton.MouseButton1Click:Connect(function()
    if luckFound then
        local serverLink = "https://www.roblox.com/games/" .. tostring(gameId) .. "/" .. tostring(game.JobId)
        setclipboard(serverLink)
        statusButton.Text = "✅ Server link copied!"
        wait(2)
        statusButton.Text = "Status: Playtime Luck FOUND!"
    else
        statusButton.Text = "No luck yet!"
        wait(1)
        statusButton.Text = "Status: Searching for Luck..."
    end
end)

local function getServers()
    local servers = {}
    local cursor = ""
    local url = "https://games.roblox.com/v1/games/"..tostring(gameId).."/servers/Public?limit=100"
    while true do
        local reqUrl = url..(cursor ~= "" and ("&cursor="..cursor) or "")
        local success, res = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(reqUrl))
        end)
        if success and res and res.data then
            for _, v in ipairs(res.data) do
                if v.playing < v.maxPlayers and v.id ~= game.JobId then
                    table.insert(servers, v.id)
                end
            end
            if res.nextPageCursor then
                cursor = res.nextPageCursor
            else
                break
            end
        else
            break
        end
    end
    return servers
end

-- MAIN LOOP
task.spawn(function()
    while true do
        if hopping and not luckFound then
            local luckFrame = nil
            pcall(function()
                luckFrame = gui:FindFirstChild("Bottom_UI", true)
                    :FindFirstChild("BottomFrame", true)
                    :FindFirstChild("Holder", true)
                    :FindFirstChild("List", true)
                    :FindFirstChild("Luck", true)
            end)

            if luckFrame and luckFrame.Visible and luckFrame.Active then
                luckFound = true
                statusButton.Text = "✅ Status: Playtime Luck FOUND!"
            else
                statusButton.Text = "Status: No Luck | Hopping..."
                local servers = getServers()
                if #servers > 0 then
                    TeleportService:TeleportToPlaceInstance(gameId, servers[math.random(1, #servers)])
                else
                    statusButton.Text = "⚠️ No servers found, retrying..."
                end
            end
        end
        wait(hopCooldown)
    end
end)
