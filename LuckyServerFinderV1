-- Services
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer
local Gui = LocalPlayer:WaitForChild("PlayerGui")

local GameId = game.PlaceId
local JobId = game.JobId

local countdown = 300
local running = true

-- GUI
local ScreenGui = Instance.new("ScreenGui", Gui)
ScreenGui.ResetOnSpawn = false
ScreenGui.Name = "LuckHopperGui"

local function createButton(name, pos, text, size)
    local btn = Instance.new("TextButton")
    btn.Name = name
    btn.Position = pos
    btn.Size = size
    btn.BackgroundColor3 = Color3.new(0, 0, 0)
    btn.BackgroundTransparency = 0.5
    btn.Font = Enum.Font.SciFi
    btn.TextSize = 20
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Text = text
    btn.TextWrapped = true
    btn.Parent = ScreenGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = btn

    coroutine.wrap(function()
        while task.wait(0.1) do
            local hue = tick() % 5 / 5
            if btn and btn.TextColor3 then
                btn.TextColor3 = Color3.fromHSV(hue, 1, 1)
            end
        end
    end)()

    return btn
end

local toggleBtn = createButton("Toggle", UDim2.new(0, 10, 0, 30), "Luck Hopper: ON", UDim2.new(0, 220, 0, 40))
local statusBtn = createButton("Status", UDim2.new(0, 10, 0, 80), "Status: Waiting...", UDim2.new(0, 400, 0, 40))
local skipBtn = createButton("Skip", UDim2.new(0, 420, 0, 80), "Skip", UDim2.new(0, 60, 0, 40))

-- Toggle ON/OFF
toggleBtn.MouseButton1Click:Connect(function()
    running = not running
    toggleBtn.Text = "Luck Hopper: " .. (running and "ON" or "OFF")
end)

-- Skip the countdown
skipBtn.MouseButton1Click:Connect(function()
    countdown = 0
end)

-- Anti-AFK
pcall(function()
    local vu = game:GetService("VirtualUser")
    LocalPlayer.Idled:Connect(function()
        vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        task.wait(1)
        vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    end)
end)

-- Get list of available public servers
local function getServers()
    local servers = {}
    local success, result = pcall(function()
        local url = ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100"):format(GameId)
        return HttpService:JSONDecode(game:HttpGet(url))
    end)
    if success and result and result.data then
        for _, server in pairs(result.data) do
            if server.playing < server.maxPlayers and server.id ~= JobId then
                table.insert(servers, server.id)
            end
        end
    end
    return servers
end

-- Main loop
task.spawn(function()
    while true do
        if running then
            if countdown > 0 then
                statusBtn.Text = "Status: No Playtime Luck | Time Left: " .. countdown .. "s"
                countdown -= 1
                task.wait(1)
            else
                local luckUI
                pcall(function()
                    luckUI = Gui:WaitForChild("Bottom_UI", true)
                        :WaitForChild("BottomFrame", true)
                        :WaitForChild("Holder", true)
                        :WaitForChild("List", true)
                        :FindFirstChild("Luck", true)
                end)

                if luckUI and luckUI.Visible and luckUI.Active then
                    statusBtn.Text = "✅ Luck Found! (Server link copied)"
                    setclipboard("https://www.roblox.com/games/" .. GameId .. "?jobId=" .. JobId)
                    running = false
                else
                    statusBtn.Text = "❌ No Luck, Hopping..."
                    countdown = 300
                    local servers = getServers()
                    if #servers > 0 then
                        local chosen = servers[math.random(1, #servers)]
                        TeleportService:TeleportToPlaceInstance(GameId, chosen)
                    else
                        statusBtn.Text = "⚠️ No servers found, retrying..."
                        task.wait(2)
                    end
                end
            end
        else
            statusBtn.Text = "⏸️ Hopper Off"
            task.wait(1)
        end
    end
end)
