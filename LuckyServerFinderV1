--// Luck Hopper GUI Script with Enhanced Status and UI --

-- Services local Players = game:GetService("Players") local TeleportService = game:GetService("TeleportService") local HttpService = game:GetService("HttpService") local LocalPlayer = Players.LocalPlayer local GuiService = game:GetService("GuiService")

-- Variables local hopperEnabled = true local minimized = false local countdownTime = 300 local runService = game:GetService("RunService") local placeId = game.PlaceId local luckFound = false

-- UI Creation local screenGui = Instance.new("ScreenGui") screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui") screenGui.ResetOnSpawn = false screenGui.Name = "LuckHopperUI"

local function createButton(name, text, position, size) local button = Instance.new("TextButton") button.Name = name button.Text = text button.Size = size button.Position = position button.BackgroundColor3 = Color3.new(0, 0, 0) button.BackgroundTransparency = 0.5 button.TextColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1) button.Font = Enum.Font.SciFi button.TextSize = 20 button.TextWrapped = true button.BorderSizePixel = 0

local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 8)
uicorner.Parent = button

button.Parent = screenGui
return button

end

-- Buttons local hopperButton = createButton("HopperButton", "Luck Hopper: On", UDim2.new(0, 10, 0, 50), UDim2.new(0, 180, 0, 40)) local statusLabel = createButton("StatusLabel", "Status: Luck | ❓ | Time Left ⌛ : 300", UDim2.new(0, 10, 0, 100), UDim2.new(0, 300, 0, 40)) local skipButton = createButton("SkipButton", "Skip", UDim2.new(0, 10, 0, 150), UDim2.new(0, 100, 0, 40)) local minimizeButton = createButton("MinimizeButton", "Minimize", UDim2.new(0, 120, 0, 150), UDim2.new(0, 120, 0, 40)) local closeButton = createButton("CloseButton", "Close", UDim2.new(0, 250, 0, 150), UDim2.new(0, 120, 0, 40))

-- Rainbow Text Animation spawn(function() while true do local hue = tick() % 5 / 5 local color = Color3.fromHSV(hue, 1, 1) for _, button in pairs({hopperButton, statusLabel, skipButton, minimizeButton, closeButton}) do button.TextColor3 = color end wait(0.1) end end)

-- Function to check for luck frame local function hasLuck() local success, result = pcall(function() local luck = LocalPlayer.PlayerGui:WaitForChild("Bottom_UI", 2) :WaitForChild("BottomFrame", 2) :WaitForChild("Holder", 2) :WaitForChild("List", 2) :FindFirstChild("Luck") return luck and luck.Visible and luck.Active end) return success and result end

-- Server Hop Function local function hopServer() local servers = HttpService:JSONDecode(game:HttpGet( "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100")) for _, server in pairs(servers.data) do if server.playing < server.maxPlayers and server.id ~= game.JobId then TeleportService:TeleportToPlaceInstance(placeId, server.id) return end end end

-- Countdown Loop spawn(function() while true do if hopperEnabled and not luckFound then for i = countdownTime, 0, -1 do if not hopperEnabled then break end if luckFound then break end statusLabel.Text = "Status: Luck | ❓ | Time Left ⌛ : " .. i wait(1) end if not hasLuck() then statusLabel.Text = "Status: No Luck! ❌ | Hopping shortly..." wait(0.5) hopServer() else luckFound = true statusLabel.Text = "Status: Found Luck! ✅ | Hopping Finished." end end wait(0.1) end end)

-- Hopper Toggle hopperButton.MouseButton1Click:Connect(function() hopperEnabled = not hopperEnabled hopperButton.Text = "Luck Hopper: " .. (hopperEnabled and "On" or "Off") end)

-- Skip Button skipButton.MouseButton1Click:Connect(function() if hopperEnabled then hopServer() end end)

-- Minimize Button minimizeButton.MouseButton1Click:Connect(function() minimized = not minimized for _, element in pairs(screenGui:GetChildren()) do if element:IsA("TextButton") and element.Name ~= "MinimizeButton" then element.Visible = not minimized end end end)

-- Close Button closeButton.MouseButton1Click:Connect(function() hopperEnabled = false screenGui:Destroy() end)
