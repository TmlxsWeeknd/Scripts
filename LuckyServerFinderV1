--[[ Luck Server Hopper with Retry, Status UI, Toggle, Skip, and Anti-AFK Delta Mobile Compatible | Automatically Copies Server Link When Luck Found ]]--

-- Services local TeleportService = game:GetService("TeleportService") local Players = game:GetService("Players") local HttpService = game:GetService("HttpService") local player = Players.LocalPlayer local gui = player:WaitForChild("PlayerGui")

-- Game ID local gameId = game.PlaceId local waitBeforeCheck = 300 -- 5 minutes countdown local remainingTime = waitBeforeCheck local hopping = true local retrying = false

-- UI Setup local screenGui = Instance.new("ScreenGui", gui) screenGui.ResetOnSpawn = false

local function createButton(name, pos, defaultText, size, parent) local btn = Instance.new("TextButton") btn.Name = name btn.Size = size or UDim2.new(0, 220, 0, 40) btn.Position = pos btn.BackgroundColor3 = Color3.new(0, 0, 0) btn.BackgroundTransparency = 0.5 btn.TextColor3 = Color3.new(1, 1, 1) btn.Font = Enum.Font.SciFi btn.TextSize = 20 btn.Text = defaultText btn.AutoButtonColor = true btn.TextWrapped = true btn.Parent = parent or screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = btn

coroutine.wrap(function()
    while task.wait(0.1) do
        local hue = tick() % 5 / 5
        btn.TextColor3 = Color3.fromHSV(hue, 1, 1)
    end
end)()

return btn

end

-- Main buttons local toggleButton = createButton("LuckHopper", UDim2.new(0, 10, 0, 40), "Luck Hopper: ON") local statusButton = createButton("Status", UDim2.new(0, 10, 0, 85), "Status: Searching...", UDim2.new(0, 220, 0, 40)) local skipButton = createButton("Skip", UDim2.new(0, 240, 0, 85), "Skip", UDim2.new(0, 60, 0, 40))

-- Toggle Function toggleButton.MouseButton1Click:Connect(function() hopping = not hopping toggleButton.Text = hopping and "Luck Hopper: ON" or "Luck Hopper: OFF" end)

-- Skip Function skipButton.MouseButton1Click:Connect(function() remainingTime = 0 end)

-- Anti-AFK pcall(function() local vu = game:GetService("VirtualUser") player.Idled:Connect(function() vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame) task.wait(1) vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame) end) end)

-- Get Server List local function getServers() local servers = {} local cursor = "" local success, result = pcall(function() return HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. gameId .. "/servers/Public?sortOrder=Asc&limit=100&cursor=" .. cursor)) end)

if success and result and result.data then
    for _, server in ipairs(result.data) do
        if server.playing < server.maxPlayers and server.id ~= game.JobId then
            table.insert(servers, server.id)
        end
    end
end

return servers

end

-- Retry on Teleport Failure TeleportService.TeleportInitFailed:Connect(function(player, result, err) if retrying then warn("Teleport failed: " .. result.Name .. ", retrying...") task.wait(1) local retryServers = getServers() if #retryServers > 0 then local newServer = retryServers[math.random(1, #retryServers)] pcall(function() TeleportService:TeleportToPlaceInstance(gameId, newServer) end) end end end)

-- Main Loop while task.wait(1) do if hopping then remainingTime -= 1 statusButton.Text = "Status: No Playtime Luck | Time Left: " .. remainingTime .. "s"

if remainingTime <= 0 then
        local luckFrame = nil
        pcall(function()
            local bottomUI = gui:FindFirstChild("Bottom_UI", true)
            if bottomUI then
                local frame = bottomUI:FindFirstChild("BottomFrame", true)
                if frame then
                    local holder = frame:FindFirstChild("Holder", true)
                    if holder then
                        local list = holder:FindFirstChild("List", true)
                        if list then
                            luckFrame = list:FindFirstChild("Luck", true)
                        end
                    end
                end
            end
        end)

        if luckFrame and luckFrame.Visible and luckFrame.Active then
            statusButton.Text = "✅ Status: Playtime Luck FOUND!"
            setclipboard("https://www.roblox.com/games/" .. gameId .. "?jobId=" .. game.JobId)
            hopping = false
        else
            statusButton.Text = "❌ No Luck | Hopping..."
            remainingTime = waitBeforeCheck -- reset timer
            local servers = getServers()
            if #servers > 0 then
                local target = servers[math.random(1, #servers)]
                retrying = true
                pcall(function()
                    TeleportService:TeleportToPlaceInstance(gameId, target)
                end)
            else
                statusButton.Text = "⚠️ No servers available"
            end
        end
    end
else
    statusButton.Text = "⏸️ Hopper is OFF"
end

end

