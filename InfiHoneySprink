local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local camera = Workspace.CurrentCamera
local backpack = player:WaitForChild("Backpack")

-- UI setup
local confirmUI = player.PlayerGui:WaitForChild("ConfirmSprinkler")
local placingLabel = confirmUI:FindFirstChild("PlacingLabel", true)
local confirmButton = confirmUI:FindFirstChild("Confirm", true)
local cancelButton = confirmUI:FindFirstChild("Cancel", true)

confirmUI.Enabled = false

-- Get tool from backpack
local originalTool
for _, tool in ipairs(backpack:GetChildren()) do
	if tool:IsA("Tool") and tool.Name:find("Honey Sprinkler") then
		originalTool = tool
		break
	end
end

if not originalTool then
	warn("‚ùå No Honey Sprinkler tool found.")
	return
end

-- Clone tool
local fakeTool = originalTool:Clone()
fakeTool.Name = "Honey Sprinkler x‚àû"
fakeTool.Parent = backpack

-- Reference model
local modelTemplate = ReplicatedStorage:WaitForChild("ObjectModels"):WaitForChild("Honey Sprinkler")

if not modelTemplate.PrimaryPart then
	for _, part in ipairs(modelTemplate:GetDescendants()) do
		if part:IsA("BasePart") then
			modelTemplate.PrimaryPart = part
			break
		end
	end
end

local placing = false
local placementPosition = nil
local inputDebounce = false

-- Raycast to get position
local function getRaycastPosition(screenPosition)
	local rayOrigin = camera.CFrame.Position
	local rayDirection = camera:ScreenPointToRay(screenPosition.X, screenPosition.Y).Direction * 500

	local raycastParams = RaycastParams.new()
	raycastParams.FilterDescendantsInstances = {player.Character}
	raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	raycastParams.IgnoreWater = true

	local result = Workspace:Raycast(rayOrigin, rayDirection, raycastParams)
	return result and result.Position or nil
end

-- Reset debounce
local function safeResetDebounce()
	task.delay(0.1, function()
		inputDebounce = false
	end)
end

-- Equip
fakeTool.Equipped:Connect(function()
	inputDebounce = false
	placing = true
	placementPosition = nil
	confirmUI.Enabled = false
	placingLabel.Text = "Place Honey Sprinkler x‚àû?"
end)

-- Unequip
fakeTool.Unequipped:Connect(function()
	placing = false
	placementPosition = nil
	confirmUI.Enabled = false
	inputDebounce = false
end)

-- PC Click
UIS.InputBegan:Connect(function(input, gameProcessed)
	if placing and not gameProcessed and not confirmUI.Enabled and not inputDebounce then
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			local pos = input.Position or UIS:GetMouseLocation()
			local worldPos = getRaycastPosition(pos)
			if worldPos then
				placementPosition = worldPos + Vector3.new(0, 0.5, 0)
				confirmUI.Enabled = true
				inputDebounce = true
			else
				safeResetDebounce()
			end
		end
	end
end)

-- Mobile tap
UIS.TouchTap:Connect(function(touches, gameProcessed)
	if placing and not gameProcessed and not confirmUI.Enabled and not inputDebounce then
		local pos = touches[1]
		if pos then
			local worldPos = getRaycastPosition(pos)
			if worldPos then
				placementPosition = worldPos + Vector3.new(0, 0.5, 0)
				confirmUI.Enabled = true
				inputDebounce = true
			else
				safeResetDebounce()
			end
		end
	end
end)

-- Confirm placement
confirmButton.MouseButton1Click:Connect(function()
	if placementPosition then
		confirmUI.Enabled = false

		local finalModel = modelTemplate:Clone()
		if not finalModel.PrimaryPart then
			for _, part in ipairs(finalModel:GetDescendants()) do
				if part:IsA("BasePart") then
					finalModel.PrimaryPart = part
					break
				end
			end
		end

		finalModel.Parent = Workspace
		local cframe = CFrame.new(placementPosition) * CFrame.Angles(math.rad(180), 0, 0)
		finalModel:SetPrimaryPartCFrame(cframe)

		-- üî• PlaceEffect
		local placeEffect = ReplicatedStorage:WaitForChild("Modules")
			:WaitForChild("EffectController")
			:WaitForChild("Effects")
			:WaitForChild("Gear")
			:WaitForChild("SprinklerHandler")
			:WaitForChild("PlaceEffect")

		local placeEffectClone = placeEffect:Clone()
		placeEffectClone.CFrame = finalModel.PrimaryPart.CFrame * CFrame.new(0, 0.5, 0) -- Centered
		placeEffectClone.Parent = Workspace

		local attach = placeEffectClone:FindFirstChild("Attachment", true)
		if attach then
			local smoke = attach:FindFirstChild("Smoke")
			if smoke then
				smoke.Enabled = true
				task.delay(0.3, function()
					if smoke then
						smoke.Enabled = false
					end
				end)
			end
		end

		task.delay(2, function()
			if placeEffectClone then
				placeEffectClone:Destroy()
			end
		end)

		-- üîä PlaceSFX
		local placeSFX = ReplicatedStorage:WaitForChild("Modules")
			:WaitForChild("EffectController")
			:WaitForChild("Effects")
			:WaitForChild("Gear")
			:WaitForChild("SprinklerHandler")
			:WaitForChild("PlaceSFX")

		local placeSFXClone = placeSFX:Clone()
		placeSFXClone.Parent = finalModel.PrimaryPart
		placeSFXClone:Play()

		task.delay(3, function()
			if placeSFXClone then
				placeSFXClone:Destroy()
			end
		end)

		-- üåü Sprinkler VFX
		local vfxTemplate = ReplicatedStorage:WaitForChild("Modules")
			:WaitForChild("EffectController")
			:WaitForChild("Effects")
			:WaitForChild("Gear")
			:WaitForChild("SprinklerHandler")
			:WaitForChild("Honey Sprinkler VFX")

		local vfx = vfxTemplate:Clone()
		vfx.Parent = finalModel

		if vfx:IsA("Model") and vfx.PrimaryPart then
			vfx:SetPrimaryPartCFrame(finalModel.PrimaryPart.CFrame)
		elseif vfx:IsA("BasePart") then
			vfx.Position = finalModel.PrimaryPart.Position
		end

		-- üîÅ SprinklerLoop
		local soundTemplate = ReplicatedStorage:WaitForChild("Modules")
			:WaitForChild("EffectController")
			:WaitForChild("Effects")
			:WaitForChild("Gear")
			:WaitForChild("SprinklerHandler")
			:WaitForChild("SprinklerLoop")

		local sound = soundTemplate:Clone()
		sound.Looped = true
		sound.Playing = true
		sound.Parent = finalModel.PrimaryPart

		placementPosition = nil
	end

	safeResetDebounce()
end)

-- Cancel
cancelButton.MouseButton1Click:Connect(function()
	confirmUI.Enabled = false
	placementPosition = nil
	safeResetDebounce()
end)
