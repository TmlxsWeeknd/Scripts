-- ServicesAdd commentMore actions
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer
local placeId = game.PlaceId

-- State
local enabled = false
local checking = false

-- UI
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "LuckboardToggleGui"
screenGui.ResetOnSpawn = false

local toggle = Instance.new("TextButton")
toggle.Name = "LuckToggle"
toggle.Size = UDim2.new(0, 220, 0, 40)
toggle.Position = UDim2.new(0, 20, 0, 100)
toggle.BackgroundColor3 = Color3.new(0, 0, 0)
toggle.BackgroundTransparency = 0.5
toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
toggle.TextScaled = true
toggle.Font = Enum.Font.SciFi
toggle.Text = "Luckboard Finder: OFF"
toggle.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = toggle

-- Rainbow Text Function
local function rainbowify(button)
	local hue = 0
	RunService.RenderStepped:Connect(function()
		if button and button.Text then
			hue = (hue + 1) % 360
			local color = Color3.fromHSV(hue / 360, 1, 1)
			button.TextColor3 = color
		end
	end)
end

rainbowify(toggle)

-- Rejoin Function
local function checkLuckboardAndRejoin()
	if checking then return end
	checking = true
	while enabled do
		local found = workspace:FindFirstChild("MapDecorations") and workspace.MapDecorations:FindFirstChild("Luckboard")
		if found then
			toggle.Text = "Luckboard Found! âœ…"
			break
		else
			toggle.Text = "Luckboard Finder: Searching..."
			task.wait(2)
			TeleportService:Teleport(placeId, player)
			break -- Break loop so it waits for teleport
		end
	end
	checking = false
end

-- Toggle Control
toggle.MouseButton1Click:Connect(function()
	enabled = not enabled
	if enabled then
		toggle.Text = "Luckboard Finder: ON"
		checkLuckboardAndRejoin()
	else
		toggle.Text = "Luckboard Finder: OFF"
	end
end)
