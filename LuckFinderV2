--// Settings
local CHECK_INTERVAL = 5 -- seconds between checks
local PLACE_ID = game.PlaceId
local running = true -- Starts as ON

--// UI Setup
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "LuckboardFinderUI"

local ToggleButton = Instance.new("TextButton")
ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 200, 0, 50)
ToggleButton.Position = UDim2.new(0, 20, 0, 100)
ToggleButton.BackgroundColor3 = Color3.new(0, 0, 0)
ToggleButton.BackgroundTransparency = 0.5
ToggleButton.Text = "Luckboard Hopper: ON"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.SciFi
ToggleButton.TextScaled = true
ToggleButton.BorderSizePixel = 0

-- Rainbow Text
task.spawn(function()
	while true do
		for h = 0, 1, 0.01 do
			ToggleButton.TextColor3 = Color3.fromHSV(h, 1, 1)
			wait(0.05)
		end
	end
end)

--// Function to Check for Luckboard
local function hasLuckboard()
	local success, result = pcall(function()
		return workspace:FindFirstChild("MapDecorations") and workspace.MapDecorations:FindFirstChild("Luckboard")
	end)
	return success and result ~= nil
end

--// Hopper Logic (Private Server Compatible)
local function startLoop()
	while running do
		if hasLuckboard() then
			ToggleButton.Text = "Luckboard FOUND âœ…"
			break
		else
			wait(CHECK_INTERVAL)
			game:GetService("TeleportService"):Teleport(PLACE_ID)
		end
	end
end

-- Start Immediately
task.spawn(startLoop)

-- Toggle Manual Control
ToggleButton.MouseButton1Click:Connect(function()
	running = not running
	ToggleButton.Text = running and "Luckboard Hopper: ON" or "Luckboard Hopper: OFF"
	if running then
		task.spawn(startLoop)
	end
end)
