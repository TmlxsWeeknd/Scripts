--// Settings
local CHECK_INTERVAL = 5 -- seconds between checks
local PLACE_ID = game.PlaceId
local jobId = game.JobId
local running = false

--// UI Setup
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "LuckboardFinderUI"

local ToggleButton = Instance.new("TextButton")
ToggleButton.Parent = ScreenGui
ToggleButton.Size = UDim2.new(0, 200, 0, 50)
ToggleButton.Position = UDim2.new(0, 20, 0, 100)
ToggleButton.BackgroundColor3 = Color3.new(0, 0, 0)
ToggleButton.BackgroundTransparency = 0.5
ToggleButton.Text = "Luckboard Hopper: OFF"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.SciFi
ToggleButton.TextScaled = true
ToggleButton.AutoButtonColor = true
ToggleButton.BorderSizePixel = 0
ToggleButton.TextStrokeTransparency = 0

-- Rainbow Text
spawn(function()
	while true do
		for hue = 0, 1, 0.01 do
			ToggleButton.TextColor3 = Color3.fromHSV(hue, 1, 1)
			wait(0.05)
		end
	end
end)

--// Function to Check for Luckboard
local function hasLuckboard()
	local success, result = pcall(function()
		return workspace:FindFirstChild("MapDecorations") and workspace.MapDecorations:FindFirstChild("Luckboard")
	end)
	return success and result ~= nil
end

--// Toggle Logic
ToggleButton.MouseButton1Click:Connect(function()
	running = not running
	ToggleButton.Text = running and "Luckboard Hopper: ON" or "Luckboard Hopper: OFF"

	if running then
		task.spawn(function()
			while running do
				if hasLuckboard() then
					ToggleButton.Text = "Luckboard FOUND âœ…"
					break
				else
					wait(CHECK_INTERVAL)
					game:GetService("TeleportService"):TeleportToPlaceInstance(PLACE_ID, jobId)
				end
			end
		end)
	end
end)
