-- Services
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

local PlaceId = game.PlaceId
local running = true -- Hopper toggle flag
local autoBuyToggle = true -- Auto-buy is ON by default
local autoSeedBuyToggle = true -- Auto-buy seed stock

-- Bloodlit skybox IDs
local bloodlitSkyboxIds = {
    SkyboxBk = "rbxassetid://111321078595932",
    SkyboxFt = "rbxassetid://95129324535672",
    SkyboxLf = "rbxassetid://111970040506702",
    SkyboxDn = "rbxassetid://82118430379285",
    SkyboxRt = "rbxassetid://79353534175259",
    SkyboxUp = "rbxassetid://84457327390960"
}

-- Night skybox IDs
local nightSkyboxIds = {
    SkyboxBk = "rbxassetid://135897169947130",
    SkyboxFt = "rbxassetid://107905878941696",
    SkyboxLf = "rbxassetid://91354764228778",
    SkyboxRt = "rbxassetid://101750516482570",
    SkyboxUp = "rbxassetid://123019651557734",
    SkyboxDn = "rbxassetid://119785634988565"
}

-- Create GUI
local ui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ui.Name = "AutoFarmUI"
ui.ResetOnSpawn = false

-- Button creator
local function createButton(text, position)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 160, 0, 40)
    btn.Position = position
    btn.BackgroundTransparency = 0.5
    btn.BackgroundColor3 = Color3.new(1, 1, 1)
    btn.BorderColor3 = Color3.new(0, 0, 0)
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 18
    btn.Text = text
    btn.Parent = ui

    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(0, 8)
    uicorner.Parent = btn

    local uiStroke = Instance.new("UIStroke")
    uiStroke.Color = Color3.new(0, 0, 0)
    uiStroke.Thickness = 1
    uiStroke.Parent = btn

    return btn
end

local hopperButton = createButton("Hopper: ON", UDim2.new(0, 10, 0, 10))
local autoBuyButton = createButton("Stop Auto Buy", UDim2.new(0, 10, 0, 60))
local seedBuyButton = createButton("Stop Seed Buy", UDim2.new(0, 10, 0, 110))

-- Rainbow text effect
spawn(function()
    local step = 0
    while true do
        local color = Color3.fromHSV((step % 360) / 360, 1, 1)
        for _, btn in ipairs({hopperButton, autoBuyButton, seedBuyButton}) do
            btn.TextColor3 = color
        end
        step = (step + 3) % 360
        wait(0.03)
    end
end)

hopperButton.MouseButton1Click:Connect(function()
    running = not running
    hopperButton.Text = running and "Hopper: ON" or "Hopper: OFF"
end)

autoBuyButton.MouseButton1Click:Connect(function()
    autoBuyToggle = not autoBuyToggle
    autoBuyButton.Text = autoBuyToggle and "Stop Auto Buy" or "Start Auto Buy"
end)

seedBuyButton.MouseButton1Click:Connect(function()
    autoSeedBuyToggle = not autoSeedBuyToggle
    seedBuyButton.Text = autoSeedBuyToggle and "Stop Seed Buy" or "Start Seed Buy"
end)

-- Auto-buy logic
spawn(function()
    local items = {
        "Chocolate Carrot",
        "Red Lollipop",
        "Candy Sunflower",
        "Easter Egg",
        "Chocolate Sprinkler",
        "Candy Blossom"
    }
    while true do
        if autoBuyToggle then
            for _, item in ipairs(items) do
                pcall(function()
                    ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("BuyEventShopStock"):FireServer(item)
                end)
                wait(0.1)
            end
        end
        wait(1)
    end
end)

-- Auto seed stock logic
spawn(function()
    local seeds = {"Beanstalk", "Grape", "Pepper", "Cacao"}
    while true do
        if autoSeedBuyToggle then
            for _, seed in ipairs(seeds) do
                pcall(function()
                    ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("BuySeedStock"):FireServer(seed)
                end)
                wait(0.1)
            end
        end
        wait(1)
    end
end)

-- Skybox matching
local function matchesSkybox(sky, target)
    for key, id in pairs(target) do
        local val = sky[key]
        if not val or string.lower(val) ~= string.lower(id) then
            return false
        end
    end
    return true
end

local function isBloodlit()
    local sky = Lighting:FindFirstChildWhichIsA("Sky")
    return sky and matchesSkybox(sky, bloodlitSkyboxIds)
end

local function isNightSky()
    local sky = Lighting:FindFirstChildWhichIsA("Sky")
    return sky and matchesSkybox(sky, nightSkyboxIds)
end

-- Get servers
local function getServers()
    local url = string.format("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100", PlaceId)
    local success, result = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(url))
    end)
    return (success and result and result.data) or {}
end

-- Server hopper logic
local teleporting = false

spawn(function()
    wait(15) -- initial delay

    while true do
        if running and not teleporting then
            teleporting = true

            local stay = false

            if isBloodlit() then
                print("✅ Bloodlit detected! Staying for 17 minutes...")
                stay = true
                wait(1020)
            end

            if not stay then
                print("🔄 Searching for a new server...")
                local servers = getServers()
                local joined = false

                for _, s in ipairs(servers) do
                    if not running then break end
                    if s.id ~= game.JobId and not s.vipServerId and s.playing >= 2 and s.playing < s.maxPlayers then
                        print("➡️ Trying server:", s.id, "with", s.playing, "/", s.maxPlayers)
                        local success, err = pcall(function()
                            TeleportService:TeleportToPlaceInstance(PlaceId, s.id, LocalPlayer)
                        end)
                        if success then
                            joined = true
                            break
                        else
                            warn("❌ Teleport failed:", err)
                        end
                        wait(2)
                    end
                end

                if not joined then
                    print("⚠️ No suitable servers found. Retrying in 15 seconds...")
                    wait(15)
                end
            end

            teleporting = false
        else
            wait(1)
        end
    end
end)

-- Anti-idle
spawn(function()
    local VirtualUser = game:service("VirtualUser")
    game:service("Players").LocalPlayer.Idled:connect(function()
        VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
        wait(1)
        VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    end)
end)
